# main.py
import os
import time
import datetime
from App_Directory.LLM.Gemini import init_chat, greet_user, handle_user_message
from App_Directory.Python.Functions import log_message

# –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Bank_AI_Caller
project_root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ Logs –≤–Ω—É—Ç—Ä–∏ App_Directory
log_dir = os.path.join(project_root, "App_Directory", "Logs")
os.makedirs(log_dir, exist_ok=True)

# –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
start_time = datetime.datetime.now()

# –ò–º—è –∏ –ø—É—Ç—å –ª–æ–≥-—Ñ–∞–π–ª–∞
log_file_name = f"chat_log_{start_time.strftime('%Y-%m-%d_%H-%M-%S')}.txt"
log_file = os.path.join(log_dir, log_file_name)

# –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –≤ –ª–æ–≥
with open(log_file, "a", encoding="utf-8") as f:
    f.write(f"[INFO] –ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {start_time.strftime('%Y-%m-%d %H:%M:%S')}\n")

def main():
    # –°—Ç–∞—Ä—Ç
    chat = init_chat()

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    try:
        bot_reply = greet_user(chat)
        print("–ë–æ—Ç:", bot_reply)
        log_message("–ë–æ—Ç", bot_reply, log_file)
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–∏:", e)

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:
        user_input = input("–¢—ã: ")
        log_message("–¢—ã", user_input, log_file)

        cleaned_reply, log_type, log_value = handle_user_message(chat, user_input)
        print("–ë–æ—Ç:", cleaned_reply)
        log_message("–ë–æ—Ç", cleaned_reply, log_file)

        if log_type:
            if log_type == "fail":
                print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è")
            elif log_type == "success":
                print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: –∫–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω")
            elif log_type == "callback":
                print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –≤ {log_value}")

            with open(log_file, "a", encoding="utf-8") as f:
                f.write(f"[RESULT] {log_type.upper()}: {log_value if log_value else ''}\n")

            print("–°–∏—Å—Ç–µ–º–∞: –†–∞–∑–≥–æ–≤–æ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω")
            end_time = datetime.datetime.now()
            duration = end_time - start_time
            duration_str = str(duration).split(".")[0]  # –£–¥–∞–ª—è–µ–º –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã

            with open(log_file, "a", encoding="utf-8") as f:
                f.write(f"[INFO] –ö–æ–Ω–µ—Ü —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {end_time.strftime('%Y-%m-%d %H:%M:%S')}\n")
                f.write(f"[INFO] –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {duration_str}\n")
            break

        if cleaned_reply.startswith("‚ö†Ô∏è –û—à–∏–±–∫–∞"):
            time.sleep(60)

if __name__ == "__main__":
    main()